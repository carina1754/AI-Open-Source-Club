# 원소 주소역할을 하는 인덱스를 이용하여 시리즈이 원소를 선택할 수 있다.
# 이는 하나 또는 다수를 선택할 수 있는데, 이때 파이썬 리스트 슬라이싱 기법과 비슷하게
# 인덱스 범위를 지정하여 원소를 선택하는 방법도 있다.

# 인덱스 두가지 유형에 따른 사용법
# 1. 정수형 위치 인덱스 : 대괄호 안에 위치를 나타내는 숫자 입력 
#   (Series[2], Series[3 : 5], Series[[3, 4]])
# 2. 인덱스 라벨을 사용하는 대괄호 안에 이름과 함께 따옴표를 입력 
#   (Series['c'], Series[['d', 'e']], Series['d':'e'])

# 투플을 시리즈로 변환 => 리스트처럼 자동 정수형 인덱스 생성
# 리스트 또는 투플을 시리즈로 만들 때 정수형 위치 인덱스 대신 인덱스 이름 지정 가능
import pandas as pd

# 투플 데이터 생성 및 변수에 저장
tup_data = ('영인', '2010-05-01', '여', True)
# 투플 데이터를 시리즈로 변환 및 인덱스 이름 지정
sr = pd.Series(tup_data, index=['이름', '생년월일', '성별', '학생여부'])
print(sr)

#결과값
# 이름              영인
# 생년월일    2010-05-01
# 성별               여
# 학생여부          True
# dtype: object


# 원소 선택(1개)
print(sr[0]) # 0번째 원소(정수형 위치 인덱스)
print(sr['이름']) # '이름' 라벨 원소(인덱스 라벨)

#결과값
# 영인
# 영인


# 여러개 원소 선택(인덱스 리스트 활용)
print(sr[[1, 2]])
print('\n')
print(sr[['생년월일', '성별']])

#결과값
# 생년월일    2010-05-01
# 성별               여
# dtype: object


# 생년월일    2010-05-01
# 성별               여
# dtype: object

# 여러개 원소 선택(인덱스 범우 지정)
print(sr[1:2]) # 끝범위 포함 x 따라서 1:2면 1부분만 출력
print('\n')
print(sr['생년월일' : '성별'])

#결과값 
# 생년월일    2010-05-01
# dtype: object


# 생년월일    2010-05-01
# 성별               여
# dtype: object